/*
 * MilanoGreen BackEnd
 * API for the web site of the Volunteering Association MilanoGreen, containing the staff of the associations and the organized events
 *
 * OpenAPI spec version: 2.0.0
 * Contact: samuele.milanesi@mail.polimi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MilanoGreenBackEnd);
  }
}(this, function(expect, MilanoGreenBackEnd) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MilanoGreenBackEnd.PeopleApi();
  });

  describe('(package)', function() {
    describe('PeopleApi', function() {
      describe('peopleGET', function() {
        it('should call peopleGET successfully', function(done) {
          // TODO: uncomment, update parameter values for peopleGET call and complete the assertions
          /*
          var opts = {};
          opts.limit = 56;
          opts.offset = 56;

          instance.peopleGET(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(MilanoGreenBackEnd.People);
              expect(data.id).to.be.a('number');
              expect(data.id).to.be("0");
              expect(data.name).to.be.a('string');
              expect(data.name).to.be("Tony Baviera");
              expect(data.image).to.be.a('string');
              expect(data.image).to.be("../assets/img/tonybaviera.png");
              expect(data.role).to.be.a('string');
              expect(data.role).to.be("Co-Executive Director");
              expect(data.motto).to.be.a('string');
              expect(data.motto).to.be("Un albero oggi per un domani migliore");
              expect(data.email).to.be.a('string');
              expect(data.email).to.be("tony.baviera@milanogreen.it");
              expect(data.phone).to.be.a('string');
              expect(data.phone).to.be("+39 333 98 95 357");
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('peoplePeopleIdGET', function() {
        it('should call peoplePeopleIdGET successfully', function(done) {
          // TODO: uncomment, update parameter values for peoplePeopleIdGET call and complete the assertions
          /*
          var peopleId = 789;

          instance.peoplePeopleIdGET(peopleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilanoGreenBackEnd.People);
            expect(data.id).to.be.a('number');
            expect(data.id).to.be("0");
            expect(data.name).to.be.a('string');
            expect(data.name).to.be("Tony Baviera");
            expect(data.image).to.be.a('string');
            expect(data.image).to.be("../assets/img/tonybaviera.png");
            expect(data.role).to.be.a('string');
            expect(data.role).to.be("Co-Executive Director");
            expect(data.motto).to.be.a('string');
            expect(data.motto).to.be("Un albero oggi per un domani migliore");
            expect(data.email).to.be.a('string');
            expect(data.email).to.be("tony.baviera@milanogreen.it");
            expect(data.phone).to.be.a('string');
            expect(data.phone).to.be("+39 333 98 95 357");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('peoplePeopleIdRelatedEventsGET', function() {
        it('should call peoplePeopleIdRelatedEventsGET successfully', function(done) {
          // TODO: uncomment, update parameter values for peoplePeopleIdRelatedEventsGET call and complete the assertions
          /*
          var peopleId = 789;

          instance.peoplePeopleIdRelatedEventsGET(peopleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilanoGreenBackEnd.Event);
            expect(data.id).to.be.a('number');
            expect(data.id).to.be("0");
            expect(data.name).to.be.a('string');
            expect(data.name).to.be("Salviamo la Quercia Nana");
            expect(data._date).to.be.a('string');
            expect(data._date).to.be("09/08/2020, 14:00 - 18:00");
            expect(data.month).to.be.a('string');
            expect(data.month).to.be("GEN");
            expect(data.description).to.be.a('string');
            expect(data.description).to.be("Simbolo di Porta Genova, la Quercia Nana oggi Ã¨ in grave pericolo");
            expect(data.image).to.be.a('string');
            expect(data.image).to.be("../assets/img/quercianana.png");
            expect(data.icon).to.be.a('string');
            expect(data.icon).to.be("../assets/img/volontariato.png");
            expect(data.contactId).to.be.a('number');
            expect(data.contactId).to.be("0");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('peoplePeopleIdRelatedServicesGET', function() {
        it('should call peoplePeopleIdRelatedServicesGET successfully', function(done) {
          // TODO: uncomment, update parameter values for peoplePeopleIdRelatedServicesGET call and complete the assertions
          /*
          var peopleId = 789;

          instance.peoplePeopleIdRelatedServicesGET(peopleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(MilanoGreenBackEnd.Service);
            expect(data.id).to.be.a('number');
            expect(data.id).to.be("0");
            expect(data.title).to.be.a('string');
            expect(data.title).to.be("Volontariato");
            expect(data.description).to.be.a('string');
            expect(data.description).to.be("Lavoriamo per migliorare la salute delle nostre foreste urbane");
            expect(data.image).to.be.a('string');
            expect(data.image).to.be("../assets/img/volontariato.png");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
