/*
 * MilanoGreen BackEnd
 * API for the web site of the Volunteering Association MilanoGreen, containing the staff of the associations and the organized events
 *
 * OpenAPI spec version: 2.0.0
 * Contact: samuele.milanesi@mail.polimi.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MilanoGreenBackEnd) {
      root.MilanoGreenBackEnd = {};
    }
    root.MilanoGreenBackEnd.Event = factory(root.MilanoGreenBackEnd.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Event model module.
   * @module model/Event
   * @version 2.0.0
   */

  /**
   * Constructs a new <code>Event</code>.
   * One single of the Events organized by MilanoGreen
   * @alias module:model/Event
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Event</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Event} obj Optional instance to populate.
   * @return {module:model/Event} The populated <code>Event</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('date'))
        obj._date = ApiClient.convertToType(data['date'], 'String');
      if (data.hasOwnProperty('month'))
        obj.month = ApiClient.convertToType(data['month'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('image'))
        obj.image = ApiClient.convertToType(data['image'], 'String');
      if (data.hasOwnProperty('icon'))
        obj.icon = ApiClient.convertToType(data['icon'], 'String');
      if (data.hasOwnProperty('contact_id'))
        obj.contactId = ApiClient.convertToType(data['contact_id'], 'Number');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {String} _date
   */
  exports.prototype._date = undefined;

  /**
   * @member {module:model/Event.MonthEnum} month
   */
  exports.prototype.month = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {String} image
   */
  exports.prototype.image = undefined;

  /**
   * @member {String} icon
   */
  exports.prototype.icon = undefined;

  /**
   * @member {Number} contactId
   */
  exports.prototype.contactId = undefined;


  /**
   * Allowed values for the <code>month</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MonthEnum = {
    /**
     * value: "GEN"
     * @const
     */
    GEN: "GEN",

    /**
     * value: "FEB"
     * @const
     */
    FEB: "FEB",

    /**
     * value: "MAR"
     * @const
     */
    MAR: "MAR",

    /**
     * value: "APR"
     * @const
     */
    APR: "APR",

    /**
     * value: "MAG"
     * @const
     */
    MAG: "MAG",

    /**
     * value: "GIU"
     * @const
     */
    GIU: "GIU",

    /**
     * value: "LUG"
     * @const
     */
    LUG: "LUG",

    /**
     * value: "AGO"
     * @const
     */
    AGO: "AGO",

    /**
     * value: "SET"
     * @const
     */
    SET: "SET",

    /**
     * value: "OTT"
     * @const
     */
    OTT: "OTT",

    /**
     * value: "NOV"
     * @const
     */
    NOV: "NOV",

    /**
     * value: "DIC"
     * @const
     */
    DIC: "DIC"
  };

  return exports;

}));
